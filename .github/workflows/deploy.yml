name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      REPOSITORY: ${{ secrets.GCP_REPOSITORY }}
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
      MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      HF_API_KEY: ${{ secrets.HF_API_KEY }}
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ github.token }}
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      IMAGE: ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY }}/ocr-deployed:${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t $IMAGE .

      - name: Push Docker image
        run: |
          docker push $IMAGE

      - name: Tag image as latest
        run: |
          docker tag $IMAGE $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/ocr-deployed:latest
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/ocr-deployed:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ocr-deployed \
            --image $IMAGE \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars "MONGODB_URI=$MONGODB_URI,MISTRAL_API_KEY=$MISTRAL_API_KEY,GOOGLE_API_KEY=$GOOGLE_API_KEY,HF_API_KEY=$HF_API_KEY" \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --port 8080

      - name: Notify Discord
        run: |
          chmod +x ./notify_discord.sh
          ./notify_discord.sh
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ github.token }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          COMMIT_SHA: ${{ github.sha }}
